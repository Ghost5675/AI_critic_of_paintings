def aq(messageText: str):
    from g4f.client import Client

    client = Client()
    response = client.chat.completions.create(
        messages=[{"role": "user", "content": f"Дай мне краткий односложный и четкий ответ на мой вопрос. {messageText}"}],
    )

    return response.choices[0].message.content


def generate_assistant_message(user_message=None):
    # Если это первое сообщение, просто приветствие
    if user_message is None:
        text = '''
Привет! Я твой секретарь.  
В мои обязанности включают:

<hr>1. Помощь в планировании твоего дня, недели и долгосрочных целей.
<br>2. Организация рабочего графика и встреч, чтобы эффективно использовать время.
<br>3. Отслеживание твоей успеваемости и прогресса в ключевых сферах: карьера, здоровье, личные отношения и учеба.
<br>4. Помощь в управлении приоритетами и задачами, чтобы сосредоточиться на наиболее важных делах.
<br>5. Напоминание о важных событиях, дедлайнах и задачах.
<br>6. Помощь в контроле здоровья: напоминание о физических упражнениях, отдыхе и правильном питании.
<br>7. Поддержка в развитии и саморазвитии, включая профессиональные навыки и личностный рост.
<br>8. Подготовка отчетов о достигнутых результатах и постановка новых целей.
<br>9. Участие в обсуждении твоих планов и идей, предоставление обратной связи и предложений.

Моя цель — помочь тебе стать более организованным, продуктивным и успешным в каждой области твоей жизни!
        '''
        return f"{text}"

    # Логика ответа ассистента (можно расширить)
    response = f"{aq(user_message)}"
    return response
